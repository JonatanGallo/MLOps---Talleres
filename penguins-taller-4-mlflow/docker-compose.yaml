services:
  minio:
    container_name: Minio
    command: server /data --console-address ":8001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=supersecret
    image: quay.io/minio/minio:latest
    ports:
      - '8000:9000'
      - '8001:8001'
    volumes:
      - minio_data:/data

    restart: unless-stopped

  mlflow:
    build:
      context: mlflow
      # Assuming Dockerfile is in the mlflow directory
      dockerfile: Dockerfile
    container_name: MLflow
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://10.43.100.99:8000
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: supersecret
      AWS_DEFAULT_REGION: "us-east-1"
      AWS_S3_FORCE_PATH_STYLE: "true"
    depends_on:
      - minio
    ports:
      - 8003:8003
    volumes:
      - ./mlflowdb:/app/mlflowdb
    restart: always

  mysql:
    image: mysql:8.4
    container_name: MySQL
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: mlflow_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "8004:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  mysql_training:
    image: mysql:8.4
    container_name: MySQL_Training
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: training
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "8006:3306"
    volumes:
      - mysql_training_data:/var/lib/mysql

  jupyter:
    build:
      context: training_app
      dockerfile: Dockerfile
    container_name: Jupyter
    ports:
      - "8005:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./training_app:/home/jovyan/workspace
    user: root
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - MLFLOW_TRACKING_URI=http://mlflow:8003
      - MLFLOW_S3_ENDPOINT_URL=http://10.43.100.99:8000
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=supersecret
      - PASSWORD=valentasecret
      - NB_UID=1000
      - NB_GID=1000
      - CHOWN_EXTRA=/home/jovyan/workspace
      - CHOWN_EXTRA_OPTS=-R
      - JUPYTER_TOKEN=cualquiera
    depends_on:
      - mlflow
    restart: always

  
  prediction: # Nombre del servicio, en este caso es un servicio para ML (Machine Learning).
    build: ./api  # Indica que Docker debe construir la imagen usando el Dockerfile ubicado en el directorio actual (".").
    ports:
      - "8012:80"
    environment:
      - MLFLOW_MODELS=http://mlflow:8003
      - MLFLOW_S3_ENDPOINT_URL=http://10.43.100.99:8000
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=supersecret
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "80", "--reload"]

volumes:
  minio_data:
  mysql_data:
    driver: local
  mysql_training_data:
    driver: local